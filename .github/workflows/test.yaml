name: Test
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install packages
      run: |
        pip install .
        pip install -r requirements-dev.txt

    - name: pre-commit
      run: pre-commit run --all-files

    - name: 'Run unit tests'
      id: runtests
      run: |
        coverage run -m pytest test/ --junitxml=test-execution.xml
        rc=$?
        coverage xml

        echo "rc=$rc" >> $GITHUB_OUTPUT

    - name: 'Save coverage report as an Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./coverage.xml

    - name: 'Save execution report as an Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: execution-report
        path: ./test-execution.xml

  sonarqube:
    name: SonarQube scan
    runs-on: ubuntu-latest
    needs: unittests
    environment: production
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      # Download the coverage report artifact
      - name: 'Download coverage and execution report'
        uses: actions/download-artifact@v4
        with:
          pattern: '*-report'

      # Perform the SonarQube scan
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optional: Fail the job if Quality Gate is red
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
