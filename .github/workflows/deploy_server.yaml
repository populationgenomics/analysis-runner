name: Deploy analysis-runner server
on:
  workflow_dispatch:
    inputs:
      hail_ref:
        description: 'Hail repo ref (or commit SHA)'
        required: true
        default: "main"

permissions:
  contents: read
  id-token: write

jobs:
  deploy_server:
    runs-on: ubuntu-latest

    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      DRIVER_IMAGE: australia-southeast1-docker.pkg.dev/analysis-runner/images/driver
      SERVER_IMAGE: australia-southeast1-docker.pkg.dev/analysis-runner/images/server

    steps:
    - name: "checkout analysis-runner repo"
      uses: actions/checkout@v3

    - name: "checkout Hail repo"
      uses: actions/checkout@v3
      with:
        repository: "populationgenomics/hail"
        ref: ${{ github.event.inputs.hail_ref }}
        path: "hail"

    - name: "Determine Hail SHA"
      run: |
        cd hail
        echo "HAIL_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: "Set Docker image tag"
      run: |
        echo "IMAGE_TAG=${{ github.sha }}-hail-$HAIL_SHA" >> $GITHUB_ENV

    - id: "google-cloud-auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v1"
      with:
        workload_identity_provider: "projects/370374240567/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider"
        service_account: "server-deploy@analysis-runner.iam.gserviceaccount.com"

    - id: "google-cloud-sdk-setup"
      name: "Set up Cloud SDK"
      uses: google-github-actions/setup-gcloud@v1

    - name: "gcloud docker auth"
      run: |
        gcloud auth configure-docker marketplace.gcr.io,australia-southeast1-docker.pkg.dev

    - name: "build driver image"
      run: |
        docker build \
          -f driver/Dockerfile.hail \
          --build-arg HAIL_SHA=$HAIL_SHA \
          --tag $DRIVER_IMAGE:latest \
          --tag $DRIVER_IMAGE:$IMAGE_TAG \
          driver

    - name: "push driver image"
      run: |
        docker push $DRIVER_IMAGE:$IMAGE_TAG
        docker push $DRIVER_IMAGE:latest

    - name: "build server image"
      run: |
        docker build \
          --build-arg DRIVER_IMAGE=$DRIVER_IMAGE:latest \
          --tag $SERVER_IMAGE:latest \
          --tag $SERVER_IMAGE:$IMAGE_TAG \
          server

    - name: "push server image"
      run: |
        docker push $SERVER_IMAGE:$IMAGE_TAG
        docker push $SERVER_IMAGE:latest

    - name: "deploy server-test"
      run: |
        gcloud run deploy server-test --region australia-southeast1 \
          --no-allow-unauthenticated --platform managed \
          --set-env-vars=DRIVER_IMAGE=$DRIVER_IMAGE:$IMAGE_TAG,MEMBERS_CACHE_LOCATION=gs://cpg-members-group-cache \
          --set-secrets=SERVER_CONFIG=server-config:latest \
          --image $SERVER_IMAGE:$IMAGE_TAG

    - name: "submit test batch"
      run: |
        URL=$(gcloud run services describe server-test --region australia-southeast1 --platform managed --format "value(status.url)")
        TOKEN=$(gcloud auth print-identity-token)
        curl --fail --silent --show-error -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type:application/json" \
            -d '{"output": "ci-test-batch/v42", "dataset": "fewgenomes", "accessLevel": "test", "repo": "analysis-runner", "commit": "${{ github.sha }}", "cwd": "test", "script": ["./main.py"], "description": "analysis-runner-test", "wait": true}' \
            $URL

    - name: "deploy server"
      run: |
        gcloud run deploy server --region australia-southeast1 \
          --no-allow-unauthenticated --platform managed \
          --set-env-vars=DRIVER_IMAGE=$DRIVER_IMAGE:$IMAGE_TAG,MEMBERS_CACHE_LOCATION=gs://cpg-members-group-cache \
          --set-secrets=SERVER_CONFIG=server-config:latest \
          --image $SERVER_IMAGE:$IMAGE_TAG
